name: (PROD) app deployment event

on:
#  push:
#    tags:
#      - v20[0-9][0-9].*-APP
  workflow_dispatch: {}

env:
  JAVA_VERSION: 21
  JAVA_DIST: 'temurin'
  PROFILE: 'prod'
  TAG_NAME: "${{ github.ref_name }}"
  APP_NAME: 'cicd-demo'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v5
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DIST }}

      - name: Cache gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Test
        run: ./gradlew clean test

      - name: Build Docker & Push to Registry
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: >
          ./gradlew clean jib
          -Djib.to.image=${{ env.REGISTRY }}/${{ env.APP_NAME }}
          -DdeployTag=${{ env.TAG_NAME }}

      - name: Notification to Slack Channel
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: failure()

  push_chart_repo:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      CHART_REF_BRANCH: main
    steps:
      - name: Checkout Chart Repository
        uses: actions/checkout@v5
        with:
          repository: copebble/app-chart
          token: ${{ secrets.APP_CHART_REPO_TOKEN }}
          ref: ${{ env.CHART_REF_BRANCH }}

      - name: Update Tag Name
        env:
          VALUES_YAML: values-${{ env.PROFILE }}-${{ env.APP_NAME }}.yaml
        run: |
          sed -i '/tag:/c\  tag: ${{ env.TAG_NAME }}' ${{ env.VALUES_YAML }}
          git config user.email "copebble-actions@copebble.com"
          git config user.name "copebble-actions-bot"
          git add ${{ env.VALUES_YAML }}
          git commit -m "change tag name: ${{ env.TAG_NAME }}"
          git push origin ${{ env.CHART_REF_BRANCH }}

      - name: Notification to Slack Channel
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always()
